name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_ROLE_ARN: arn:aws:iam::885812045782:role/awscopilot-oidc
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories --repository-names fastapi-app || aws ecr create-repository --repository-name fastapi-app
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: fastapi-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Install AWS Copilot CLI
        run: |
          curl -Lo copilot-cli https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x copilot-cli
          sudo mv copilot-cli /usr/local/bin/copilot
          copilot --version
      
      - name: Initialize and deploy with AWS Copilot
        run: |
          # Debug information
          echo "Current directory: $(pwd)"
          ls -la
          
          # Initialize the application with explicit workspace
          copilot app init fastapi-app --resource-tags project=fastapi-demo
          
          # Initialize the environment without profile flag
          copilot env init --name prod --default-config
          
          # Initialize the service using the manifest
          copilot svc init --name fastapi-svc --svc-type "Load Balanced Web Service" --dockerfile ./Dockerfile
          
          # Deploy the service
          copilot svc deploy --name fastapi-svc --env prod
